li, .logo {
    transition: transform 0.3s ease-in-out;
}

li:hover, .logo:hover {
    transform: scale(1.1);
}
button {
    transition: background-color 0.3s ease-in-out, transform 0.3s ease-in-out;
}

button:hover {
    transform: scale(1.1);
    background: linear-gradient(to right, #f1dd82, #916e0f);
}
/* Reusable gradient button enhancement for anchors, buttons, inputs */
.btn-gradient {
    display: inline-block;
    transition: transform 0.3s ease, filter 0.3s ease;
    will-change: transform;
}
.btn-gradient:hover, .btn-gradient:focus-visible {
    transform: scale(1.06);
}
.background-hero{
    background-image: url(Images/world.svg);
    background-size: cover;
    background-repeat: no-repeat;
}
/* Changing hero background on small screens */
@media (max-width: 640px) {
    .background-hero { background-image: url(Images/world2.svg);
    background-size: contain; }
}
/* Overlays default hidden */
.description, .lists {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}
/* Project overlay appears when hovering the containing project card */
.project-card:hover .description {
    opacity: 1;
    border: 2px solid #EED259;
}
/* Service list layer appears only when hovering the whole service card */
.service-card:hover .lists {
    opacity: 1;
    border: 2px solid #EED259;
}

/* Active (click) state for touch / small & medium screens */
.project-card.active .description,
.service-card.active .lists {
    opacity: 1;
    border: 2px solid #EED259;
}
.service-card{
    cursor: pointer;
}

/* Mobile nav state helpers (progressive enhancement) */
#mobileNav[aria-hidden="true"] { visibility: hidden; }
#mobileNav[aria-hidden="false"] { visibility: visible; }

/* Optional prefers-reduced-motion respect */
@media (prefers-reduced-motion: reduce) {
  #mobileNav, #mobileOverlay { transition: none !important; }
}

/* Smooth scrolling for in-page anchor links */
html {
    scroll-behavior: smooth;
}

/* --------------------------- Reveal Animations --------------------------- */
/* Base hidden state */
/* Hide only when JS is enabled (html.js) so no-JS users still see content */
.js [data-reveal] {
    opacity: 0;
    transform: translateY(32px);
    transition: opacity 0.7s ease, transform 0.7s cubic-bezier(.25,.8,.25,1);
    will-change: opacity, transform;
}

/* Direction variants */
.js [data-reveal="left"] { transform: translateX(-40px); }
.js [data-reveal="right"] { transform: translateX(40px); }
.js [data-reveal="up"] { transform: translateY(40px); }
.js [data-reveal="down"] { transform: translateY(-40px); }

/* Visible state */
.reveal-visible {
    opacity: 1 !important;
    transform: translate3d(0,0,0) !important;
}

/* Optional stagger via data attribute */
[data-reveal][data-delay] { transition-delay: var(--reveal-delay, 0s); }

/* Reduced motion: show immediately */
@media (prefers-reduced-motion: reduce) {
        .js [data-reveal] {
        opacity: 1 !important;
        transform: none !important;
        transition: none !important;
    }
}
